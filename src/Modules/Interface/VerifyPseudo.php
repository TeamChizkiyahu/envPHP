<?php

declare(strict_types=1);

namespace TCENVPHP\Modules\Interface;

use RuntimeException;



/**
 * Interface VerifyRandomGeneratorInterface
 *
 * This interface defines a contract for classes that generate cryptographically secure pseudo-random bytes.
 * 
 * This namespace is used to define interfaces and their implementations for the TCENVPHP application.
 *
 * @package TCENVPHP\Modules\Interface
 */
interface VerifyRandomGeneratorInterface
{
    /**
     * Generate a string of cryptographically secure pseudo-random bytes.
     *
     * @param int $length The length of the string to generate.
     * @return string The generated string.
     * @throws RuntimeException if the generated bytes are not cryptographically secure.
     */
    public function verifySecurePseudoRandomBytes(int $length): string;
}

/**
 * Class VerifyPseudo
 *
 * This class provides a method for generating a string of cryptographically secure pseudo-random bytes.
 *
 * @package TCENVPHP\Modules\Interface
 */
class VerifyPseudo implements VerifyRandomGeneratorInterface
{
    public function verifySecurePseudoRandomBytes(int $length): string
    {
        $isSecure = false;
        $bytes = openssl_random_pseudo_bytes($length, $isSecure);

        if (!$isSecure) {
            // Throw an exception if the generated bytes are not cryptographically secure
            throw new RuntimeException('Unable to generate a cryptographically secure random bytes.');
        }

        return $bytes;
    }
}
